{"remainingRequest":"D:\\项目\\vue\\travel\\travel\\node_modules\\vue-cli-plugin-vue-next\\node_modules\\vue-loader\\dist\\index.js??ref--0-1!D:\\项目\\vue\\travel\\travel\\src\\pages\\city\\components\\Search.vue?vue&type=template&id=42ab7441&scoped=true","dependencies":[{"path":"D:\\项目\\vue\\travel\\travel\\src\\pages\\city\\components\\Search.vue","mtime":1594463195866},{"path":"D:\\项目\\vue\\travel\\travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\vue\\travel\\travel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\项目\\vue\\travel\\travel\\node_modules\\vue-cli-plugin-vue-next\\node_modules\\vue-loader\\dist\\templateLoader.js","mtime":499162500000},{"path":"D:\\项目\\vue\\travel\\travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\vue\\travel\\travel\\node_modules\\vue-cli-plugin-vue-next\\node_modules\\vue-loader\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIDxkaXYgY2xhc3M9InNlYXJjaCI+CiAgICAgIDxpbnB1dCBjbGFzcz0ic2VhcmNoLWlucHV0IiB0eXBlPSJ0ZXh0IiBwbGFjZWhvbGRlcj0i6L6T5YWl5Z+O5biC5ZCN5oiW5ou86Z+zIiB2LW1vZGVsPSJrZXl3b3JkIj4KICAgIDwvZGl2PgogICAgPGRpdgogICAgICBjbGFzcz0ic2VhcmNoLWNvbnRlbnQiCiAgICAgIHJlZj0ic2VhcmNoIgogICAgICB2LXNob3c9ImtleXdvcmQiCiAgICA+CiAgICAgIDx1bD4KICAgICAgICA8bGkKICAgICAgICAgIGNsYXNzPSJzZWFyY2gtaXRlbSBib3JkZXItYm90dG9tIgogICAgICAgICAgdi1mb3I9Iml0ZW0gb2YgbGlzdCIKICAgICAgICAgIDprZXk9Iml0ZW0uaWQiCiAgICAgICAgICBAY2xpY2s9ImhhbmRsZUNpdHlDbGljayhpdGVtLm5hbWUpIgogICAgICAgID4KICAgICAgICAgIHt7aXRlbS5uYW1lfX0KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0ic2VhcmNoLWl0ZW0gYm9yZGVyLWJvdHRvbSIgdi1zaG93PSJoYXNOb0RhdGEiPuayoeacieaJvuWIsOWMuemFjeaVsOaNrjwvbGk+CiAgICAgIDwvdWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4K"},{"version":3,"sources":["D:\\项目\\vue\\travel\\travel\\src\\pages\\city\\components\\Search.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;MACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB;MACE,CAAC,CAAC,CAAC;QACD,CAAC,CAAC;UACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC;UACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvE,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/项目/vue/travel/travel/src/pages/city/components/Search.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <input class=\"search-input\" type=\"text\" placeholder=\"输入城市名或拼音\" v-model=\"keyword\">\n    </div>\n    <div\n      class=\"search-content\"\n      ref=\"search\"\n      v-show=\"keyword\"\n    >\n      <ul>\n        <li\n          class=\"search-item border-bottom\"\n          v-for=\"item of list\"\n          :key=\"item.id\"\n          @click=\"handleCityClick(item.name)\"\n        >\n          {{item.name}}\n        </li>\n        <li class=\"search-item border-bottom\" v-show=\"hasNoData\">没有找到匹配数据</li>\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\nimport { ref, computed, watch, onMounted } from 'vue'\nimport Bscroll from 'better-scroll'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nexport default {\n  name: 'CitySearch',\n  props: ['cities'],\n  setup(props) {\n    const keyword = ref('')\n    const list = ref([])\n    let timer = null\n    const store = useStore()\n    const router = useRouter()\n    const search = ref(null)\n    const hasNoData = computed(()=>{\n      !list.length\n    })\n\n    watch(keyword,(keyword,prevKeyword)=>{\n      if (timer) {\n        clearTimeout(timer)\n        timer = null\n      }\n      if (!keyword.value) {\n        list.value = []\n        return\n      }\n      timer = setTimeout(() => {\n        const result = []\n        for (let i in props.cities) {\n          props.cities[i].forEach((value) => {\n            if (value.spell.indexOf(keyword) > -1 ||\n              value.name.indexOf(keyword) > -1) {\n              result.push(value)\n            }\n          })\n        }\n        list.value = result\n      }, 100)\n    })\n\n    function handleCityClick(city){\n      store.commit('changeCity',city)\n      router.push('/')\n    }\n\n    onMounted(()=>{\n      new Bscroll(search.value, {})\n    })\n    return { search, hasNoData, keyword, list, handleCityClick}\n  },\n  data () {\n    return {\n      keyword: '',\n      list: [],\n      timer: null\n    }\n  },\n  methods: {\n    handleCityClick (city) {\n      this.$store.commit('changeCity', city)\n      this.$router.push('/')\n    }\n  },\n  computed: {\n    hasNoData () {\n      return !this.list.length\n    }\n  },\n  mounted () {\n    this.scroll = new Bscroll(this.$refs.search, {})\n  },\n  watch: {\n    keyword () {\n      if (this.timer) {\n        clearTimeout(this.timer)\n      }\n      if (!this.keyword) {\n        this.list = []\n        return\n      }\n      this.timer = setTimeout(() => {\n        const result = []\n        for (let i in this.cities) {\n          this.cities[i].forEach((value) => {\n            if (value.spell.indexOf(this.keyword) > -1 ||\n              value.name.indexOf(this.keyword) > -1) {\n              result.push(value)\n            }\n          })\n        }\n        this.list = result\n      }, 100)\n    }\n  }\n}\n</script>\n<style lang=\"stylus\" scoped>\n  @import \"~styles/varibles.styl\"\n  .search\n    height .72rem\n    padding 0 .1rem\n    background $bgColor\n    .search-input\n      box-sizing border-box\n      height .62rem\n      line-height .62rem\n      width 100%\n      padding 0 .1rem\n      line-height .62rem\n      text-align center\n      border-radius .06rem\n      color #666\n  .search-content\n    z-index 1\n    position absolute\n    overflow hidden\n    top 1.58rem\n    left 0\n    right 0\n    bottom 0\n    background #eee\n    .search-item\n      line-height .62rem\n      padding-left .2rem\n      background #fff\n      color #666\n</style>\n"]}]}